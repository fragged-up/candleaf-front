
  const signUp = async (formData: { name: string; email: string; password: string }) => {
    isLoading.value = true;
    error.value = null;

    try {
      const data = await authApi.signUp(formData);
      userData.value = data.user;
      setToken(data.accessToken);
    } catch (err) {
      error.value = err instanceof Error ? err.message : "Unknown error";
    } finally {
      isLoading.value = false;
    }
  };







   // ✅ התחברות רגילה
  const signIn = async (credentials: { email: string; password: string }) => {
    isLoading.value = true;
    error.value = null;

    try {
      const data = await authApi.signIn(credentials);
      userData.value = data.user;
      setToken(data.accessToken);
    } catch (err) {
      error.value = err instanceof Error ? err.message : "Unknown error";
    } finally {
      isLoading.value = false;
    }
  };






    const googleSignIn = async (response: CredentialResponse) => {
    isLoading.value = true;
    error.value = null;

    try {
      const data = await authApi.signInWithGoogle(response);
      userData.value = data.user;
      setToken(data.accessToken);
    } catch (err) {
      error.value = err instanceof Error ? err.message : "Unknown error";
    } finally {
      isLoading.value = false;
    }
  };

  // ✅ התנתקות
  const logout = async () => {
    try {
      await authApi.logout();
    } catch (err) {
      console.warn("Logout failed:", err);
    }
    clearAuthData();
  };